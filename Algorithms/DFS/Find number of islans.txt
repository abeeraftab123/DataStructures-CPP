class Solution {
  public:
    // Function to find the number of islands.
   vector<int> r{-1,0,1,1,0,-1,1,-1};
    vector<int> c{-1,1,0,1,-1,0,-1,1};
    void dfs(vector<vector<char>> &grid, int i ,int j)
    {
        int n = grid.size();
        int m = grid[0].size();
        if(i<0||j<0||i>n-1||j>m-1) return;
        if(grid[i][j]=='0') return;
        grid[i][j] = '0';
        for(int k = 0; k<8; k++)
        {
            dfs(grid,i+r[k],j+c[k]);
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        // Code here
        int n = grid.size();
        int m = grid[0].size();
        int c = 0;
        for(int i = 0; i<n; i++)
        {
            for(int j = 0; j<m; j++)
            {
                if(grid[i][j]=='1')
                {
                    dfs(grid,i,j);
                    c++;
                }
            }
        }
        return c;
    }
};