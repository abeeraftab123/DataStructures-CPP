class Solution {
public:
    int dfs(int i,int j,vector<vector<int>>& grid){
        int m=grid.size(),n=grid[0].size();
        grid[i][j]=0;
        int a=1;
        if(i-1>=0 and grid[i-1][j]==1)  a+=dfs(i-1,j,grid);
        if(i+1<m and grid[i+1][j]==1)  a+=dfs(i+1,j,grid);
        if(j-1>=0 and grid[i][j-1]==1)  a+=dfs(i,j-1,grid);
        if(j+1<n and grid[i][j+1]==1)  a+=dfs(i,j+1,grid);
        return a;
    }
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        vector<vector<int>> vis(m,vector<int> (n,0));
        int ans=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1){
                    ans=max(ans,dfs(i,j,grid));
                }
            }
        }
        return ans;
    }
};