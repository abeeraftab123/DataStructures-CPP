// { Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int maximumPath(int n, vector<vector<int>> mat)
    {
        // code here
        int dp[n+1][n+1];
        int ans=INT_MIN;
        for(int i=0;i<=n;i++)
           for(int j=0;j<=n;j++)
               if(i==0 || j==0)
                    dp[i][j]=0;
                
    
        for(int i=1;i<n+1;i++)
            for(int j=1;j<n+1;j++)
            {
                int op1= mat[i-1][j-1]+ dp[i-1][j];
                int op2= mat[i-1][j-1]+ dp[i-1][j-1];
                int op3= mat[i-1][j-1]+ dp[i-1][j+1];

                dp[i][j]=max({op1,op2,op3});
            }
           
  
        for(int i=1;i<n+1;i++)
            for(int j=1;j<n+1;j++)
                if(dp[i][j]>ans)
                    ans=dp[i][j];
        return ans;
    }
};

// { Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        vector<vector<int>> Matrix(N, vector<int>(N, 0));
        for(int i = 0;i < N*N;i++)
            cin>>Matrix[(i/N)][i%N];
        
        Solution ob;
        cout<<ob.maximumPath(N, Matrix)<<"\n";
    }
    return 0;
}  // } Driver Code Ends