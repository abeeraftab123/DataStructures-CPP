class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) 
    {
        int n = graph.size();
        vector<int> color(n, -1);
        
        for(int i = 0; i < n; i++)
        {
            if(color[i] == -1)
            {
                if(!checkBipartite(i, 0, color, graph))
                    return false;
            }
        }
        
        return true;
    }
    
    bool checkBipartite(int v, int curr, vector<int>& color, vector<vector<int>>& graph)
    {
        if(color[v] != -1)
        {
            if(color[v] != curr)
                return false;
            else
                return true;
        }
        
        color[v] = curr;
        
        for(auto it : graph[v])
        {
            if(!checkBipartite(it, !curr, color, graph)) 
                return false;
        }
        return true; 
    }
};