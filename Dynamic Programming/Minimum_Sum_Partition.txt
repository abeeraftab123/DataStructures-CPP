class Solution{

  public:
   
	int minDifference(int arr[], int n)  { 
	    // Your code goes here
	    int range = 0, mn = INT_MAX;
	    
	    for(int i = 0; i<n; i++) range+=arr[i];
	    //cout<<range;
	    int dp[n+1][range+1];
        for(int i =0; i<=n; i++) dp[i][0] = 1;
        for(int i =1; i<=range; i++) dp[0][i] = 0;
       
        for(int i=1; i<=n; i++)
            for(int j=1;j<=range; j++)
            {
               if(arr[i-1]>j) dp[i][j] = dp[i-1][j];
               else if(arr[i-1]<=j) dp[i][j] = dp[i-1][j]||dp[i-1][j-arr[i-1]];
            }
            
        vector<int> res;
        
        for(int i = 0; i<=range; i++)
            if(dp[n][i]) 
                res.push_back(i);
                
        vector<int> v;
	    for(int i = 0; i<res.size(); i++)
	    {
	        //cout<<res[i]<<" ";
	        mn = abs(min(mn, range-2*res[i]));
	        v.push_back(mn);
	    }   
	    sort(v.begin(), v.end());
	    
	    return v[0];
	} 
};