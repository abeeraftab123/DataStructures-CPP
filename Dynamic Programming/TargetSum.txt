class Solution {
  public:
    int countOfSubset(vector<int>&A,int sum)
    {
        int n=A.size();
        int t[n+1][sum+1];
        for(int i=0;i<=sum;i++)
            t[0][i]=0;
     
        int zeros[n+1]={};
        int z=0;
        for(int i=0;i<n;i++)
        {
            if(A[i]==0)
            z++;
            zeros[i+1]=z;
        }
        for(int i=0;i<=n;i++)
            t[i][0]=pow(2,zeros[i]);
     
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=sum;j++)
            {
                if(A[i-1]<=j)
                    t[i][j]=t[i-1][j-A[i-1]]+t[i-1][j];
                else
                    t[i][j]=t[i-1][j];
            }
        }
        return t[n][sum];
    }
    int findTargetSumWays(vector<int>&A ,int target) 
    {
        int sumArray=0;
        for(int i=0;i<A.size();i++)
            sumArray+=A[i];
        target=abs(target);
        int sum2=target+sumArray;
        if(sum2 & 1)
            return 0;
        return countOfSubset(A,sum2/2);
   }
};