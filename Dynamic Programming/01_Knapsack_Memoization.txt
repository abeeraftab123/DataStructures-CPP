class Solution
{
    public:
    //Function to return max value that can be put in knapsack of capacity W.
   
    int knapsackrec(int W, int wt[], int val[], int n, vector<vector<int>> t)
    {
        if(n==0||W==0)
            return 0;
        if(t[n][W]!=-1)
            return t[n][W];
            
        if(wt[n-1]>=W)
            return t[n][W] = max(val[n-1]+knapsackrec(W-wt[n-1],wt,val,n-1,t),knapsackrec(W,wt,val,n-1,t));
        else if(wt[n-1]<W)
            return t[n][W] = knapsackrec(W,wt,val,n-1,t);
    }
    int knapSack(int W, int wt[], int val[], int n) 
    { 
       // Your code here
       vector<vector<int>> t(n+1,vector<int>(W+1,-1));
       //memset(t,-1,sizeof(t));
       return knapsackrec(W, wt, val, n, t);
        
    }
};