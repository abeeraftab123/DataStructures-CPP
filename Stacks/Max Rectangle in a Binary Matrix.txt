class Solution{
  public:
  int largestRectangleArea(vector<int>& arr) {
       int n = arr.size();
       vector<int >left ;
       vector<int>right ;
       stack<pair< int , int >> s ;
       for( int i = 0 ; i<n ; i++)
       {
            while(!s.empty() && s.top().first >= arr[i])
                s.pop() ;
            if(!s.empty())
                left.push_back(s.top().second) ;
            else
                left.push_back(-1) ;
           s.push({arr[i],i}) ;
       }
       while(!s.empty()) s.pop();
       for( int i = n-1 ; i>=0 ; i--)
       {
             while(!s.empty() && s.top().first >= arr[i])
                s.pop() ;
             if(!s.empty())
                right.push_back(s.top().second);
             else
                right.push_back(n) ;
           s.push({arr[i],i});
       }
       int mx = 0 ;
       reverse(right.begin() ,right.end());
       for( int i = 0 ; i<n ; i++)
       {
           mx = max( mx , arr[i]*(right[i]-left[i]-1)) ;
       }
       return mx ;
    }
    int maxArea(int mat[MAX][MAX], int n, int m) {
        // Your code here
        int maxarea = 0;
        for(int i = 1; i<n; i++)
        {
            for(int j = 0; j<m; j++)
            {
                if(mat[i][j]==0)
                    mat[i][j] = 0;
                else
                    mat[i][j] = mat[i][j] + mat[i-1][j];
            }
        }
        
        for(int i = 0; i<n; i++)
        {
            vector<int> v;
            for(int j = 0; j<m; j++)
                v.push_back(mat[i][j]);
            int area = largestRectangleArea(v);
            maxarea = max(maxarea,area);
        }
        return maxarea;
    }
};