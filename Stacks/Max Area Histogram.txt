class Solution {
public:
    int largestRectangleArea(vector<int>& arr) {
       int n = arr.size();
       vector<int >left ;
       vector<int>right ;
       stack<pair< int , int >> s ;
       for( int i = 0 ; i<n ; i++)
       {
            while(!s.empty() && s.top().first >= arr[i])
                s.pop() ;
            if(!s.empty())
                left.push_back(s.top().second) ;
            else
                left.push_back(-1) ;
           s.push({arr[i],i}) ;
       }
       while(!s.empty()) s.pop();
       for( int i = n-1 ; i>=0 ; i--)
       {
             while(!s.empty() && s.top().first >= arr[i])
                s.pop() ;
             if(!s.empty())
                right.push_back(s.top().second);
             else
                right.push_back(n) ;
           s.push({arr[i],i});
       }
       int mx = 0 ;
       reverse(right.begin() ,right.end());
       for( int i = 0 ; i<n ; i++)
       {
           mx = max( mx , arr[i]*(right[i]-left[i]-1)) ;
       }
       return mx ;
    }
};